{"version":3,"sources":["definitions/ApiMethod.ts"],"names":[],"mappings":"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","file":"definitions/ApiMethod.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as ts from 'typescript';\r\nimport { ApiItemKind, IApiItemOptions } from './ApiItem';\r\nimport ApiMember from './ApiMember';\r\nimport ApiParameter from './ApiParameter';\r\nimport TypeScriptHelpers from '../TypeScriptHelpers';\r\nimport { ITextElement, ICodeLinkElement } from '../IDocElement';\r\nimport ApiDefinitionReference, { IScopedPackageName } from '../ApiDefinitionReference';\r\n\r\n/**\r\n * This class is part of the ApiItem abstract syntax tree. It represents functions that are members of\r\n * classes, interfaces, or nested type literal expressions. Unlike ApiFunctions, ApiMethods can have\r\n * access modifiers (public, private, etc.) or be optional, because they are members of a structured type\r\n *\r\n * @see ApiFunction for functions that are defined inside of a package\r\n */\r\nexport default class ApiMethod extends ApiMember {\r\n  public readonly returnType: string;\r\n  public readonly params: ApiParameter[];\r\n  private readonly _isConstructor: boolean;\r\n\r\n  constructor(options: IApiItemOptions) {\r\n    super(options);\r\n    this.kind = ApiItemKind.Method;\r\n\r\n    const methodDeclaration: ts.MethodDeclaration = options.declaration as ts.MethodDeclaration;\r\n\r\n    // Parameters\r\n    if (methodDeclaration.parameters) {\r\n      this.params = [];\r\n      for (const param of methodDeclaration.parameters) {\r\n        const declarationSymbol: ts.Symbol = TypeScriptHelpers.tryGetSymbolForDeclaration(param);\r\n        const apiParameter: ApiParameter = new ApiParameter({\r\n          extractor: this.extractor,\r\n          declaration: param,\r\n          declarationSymbol: declarationSymbol,\r\n          jsdocNode: param\r\n        });\r\n\r\n        this.innerItems.push(apiParameter);\r\n        this.params.push(apiParameter);\r\n      }\r\n    }\r\n\r\n    // tslint:disable-next-line:no-bitwise\r\n    this._isConstructor = (options.declarationSymbol.flags & ts.SymbolFlags.Constructor) !== 0;\r\n\r\n    // Return type\r\n    if (!this.isConstructor) {\r\n      if (methodDeclaration.type) {\r\n        this.returnType = methodDeclaration.type.getText();\r\n      } else {\r\n        this.returnType = 'any';\r\n        this.hasIncompleteTypes = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if this member represents a class constructor.\r\n   */\r\n  public get isConstructor(): boolean {\r\n    return this._isConstructor;\r\n  }\r\n\r\n  protected onCompleteInitialization(): void {\r\n    super.onCompleteInitialization();\r\n\r\n    // If this is a class constructor, and if the documentation summary was omitted, then\r\n    // we fill in a default summary versus flagging it as \"undocumented\".\r\n    // Generally class constructors have uninteresting documentation.\r\n    if (this.isConstructor) {\r\n      if (this.documentation.summary.length === 0) {\r\n        this.documentation.summary.push({\r\n          kind: 'textDocElement',\r\n          value: 'Constructs a new instance of the '\r\n        } as ITextElement);\r\n\r\n        const scopedPackageName: IScopedPackageName = ApiDefinitionReference\r\n          .parseScopedPackageName(this.extractor.package.name);\r\n\r\n        this.documentation.summary.push({\r\n          kind: 'linkDocElement',\r\n          referenceType: 'code',\r\n          scopeName: scopedPackageName.scope,\r\n          packageName: scopedPackageName.package,\r\n          exportName: this.parentContainer.name,\r\n          value: this.parentContainer.name\r\n        } as ICodeLinkElement);\r\n\r\n        this.documentation.summary.push({\r\n          kind: 'textDocElement',\r\n          value: ' class'\r\n        } as ITextElement);\r\n      }\r\n      this.needsDocumentation = false;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}