{"version":3,"sources":["IDocItem.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAI3D;;GAEG;AACH,IAAY,cAQX;AARD,WAAY,cAAc;IACxB,uDAAU,CAAA;IACV,yDAAO,CAAA;IACP,6DAAS,CAAA;IACT;;OAEG;IACH,2CAAE,CAAA;AACJ,CAAC,EARW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAQzB","file":"IDocItem.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { IDocElement } from './IDocElement';\r\n\r\n/**\r\n * Whether the function is public, private, or protected.\r\n */\r\nexport enum AccessModifier {\r\n  public = 0,\r\n  private,\r\n  protected,\r\n  /**\r\n   * Exmpty string, no access modifier.\r\n   */\r\n  ''\r\n}\r\n\r\n/**\r\n * The enum value of an IDocEnum.\r\n *\r\n * IDocEnumValue does not extend the IDocITem base class\r\n * because the summary is not required.\r\n */\r\nexport interface IDocEnumValue {\r\n  value: string;\r\n  summary?: IDocElement[];\r\n  remarks?: IDocElement[];\r\n  deprecatedMessage?: IDocElement[];\r\n}\r\n\r\n/**\r\n * Parameter Doc item.\r\n */\r\nexport interface IDocParam {\r\n  /**\r\n   * the parameter name\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * describes the parameter\r\n   */\r\n  description: IDocElement[];\r\n\r\n  /**\r\n   * Whether the parameter is optional\r\n   */\r\n  isOptional: boolean;\r\n\r\n  /**\r\n   * Whether the parameter has the '...' spread suffix\r\n   */\r\n  isSpread: boolean;\r\n\r\n  /**\r\n   * The data type of the parameter\r\n   */\r\n  type: string;\r\n}\r\n\r\n/**\r\n * Return value of a method or function.\r\n */\r\nexport interface IDocReturnValue {\r\n  /**\r\n   * The data type returned by the function\r\n   */\r\n  type: string;\r\n\r\n  /**\r\n   * Describes the return value\r\n   */\r\n  description: IDocElement[];\r\n}\r\n\r\n/**\r\n * DocItems are the typescript adaption of the json schemas\r\n * defined in API-json-schema.json. IDocElement is a component\r\n * for IDocItems because they represent formated rich text.\r\n *\r\n * This is the base class for other DocItem types.\r\n */\r\nexport interface IDocBase {\r\n  /**\r\n   * kind of DocItem. Ex: 'class', 'Enum', 'Function', etc.\r\n   */\r\n  kind: string;\r\n  isBeta: boolean;\r\n  summary: IDocElement[];\r\n  remarks?: IDocElement[];\r\n  deprecatedMessage?: IDocElement[];\r\n}\r\n\r\n/**\r\n * A property of a TypeScript class or interface\r\n */\r\nexport interface IDocProperty extends IDocBase {\r\n\r\n  /**\r\n   * {@inheritdoc IDocBase.kind}\r\n   */\r\n  kind: 'property';\r\n  /**\r\n   * For an interface member, whether it is optional\r\n   */\r\n  isOptional: boolean;\r\n\r\n  /**\r\n   * Whether the property is read-only\r\n   */\r\n  isReadOnly: boolean;\r\n\r\n  /**\r\n   * For a class member, whether it is static\r\n   */\r\n  isStatic: boolean;\r\n\r\n  /**\r\n   * The data type of this property\r\n   */\r\n  type: string;\r\n}\r\n\r\n/**\r\n * A member function of a typescript class or interface.\r\n */\r\nexport interface IDocMethod extends IDocBase {\r\n  /**\r\n   * {@inheritdoc IDocBase.kind}\r\n   */\r\n  kind: 'method';\r\n  /**\r\n   * a text summary of the method definition\r\n   */\r\n  signature: string;\r\n\r\n  /**\r\n   * the access modifier of the method\r\n   */\r\n  accessModifier: AccessModifier;\r\n\r\n  /**\r\n   * for an interface member, whether it is optional\r\n   */\r\n  isOptional: boolean;\r\n\r\n  /**\r\n   * for a class member, whether it is static\r\n   */\r\n  isStatic: boolean;\r\n\r\n  /**\r\n   * a mapping of parameter name to IDocParam\r\n   */\r\n\r\n  parameters: { [name: string]: IDocParam};\r\n\r\n  /**\r\n   * describes the return value of the method\r\n   */\r\n  returnValue: IDocReturnValue;\r\n}\r\n\r\n/**\r\n * A Typescript function.\r\n */\r\nexport interface IDocFunction extends IDocBase {\r\n  /**\r\n   * {@inheritdoc IDocBase.kind}\r\n   */\r\n  kind: 'function';\r\n  /**\r\n   * parameters of the function\r\n   */\r\n  parameters: { [name: string]: IDocParam};\r\n\r\n  /**\r\n   * a description of the return value\r\n   */\r\n  returnValue: IDocReturnValue;\r\n}\r\n\r\n/**\r\n * IDocClass represetns an exported class.\r\n *\r\n */\r\nexport interface IDocClass extends IDocBase {\r\n  /**\r\n   * {@inheritdoc IDocBase.kind}\r\n   */\r\n  kind: 'class';\r\n  /**\r\n   * Can be a combination of methods and/or properties\r\n   */\r\n  members: { [name: string]: IDocMember};\r\n\r\n  /**\r\n   * Interfaces implemented by this class\r\n   */\r\n  implements?: string;\r\n\r\n  /**\r\n   * The base class for this class\r\n   */\r\n  extends?: string;\r\n\r\n  /**\r\n   * Generic type parameters for this class\r\n   */\r\n  typeParameters?: string[];\r\n}\r\n\r\n/**\r\n * IDocEnum represents an exported enum.\r\n */\r\nexport interface IDocEnum extends IDocBase {\r\n  /**\r\n   * {@inheritdoc IDocBase.kind}\r\n   */\r\n  kind: 'enum';\r\n\r\n  values: IDocEnumValue[];\r\n}\r\n\r\n/**\r\n * IDocInterface represents an exported interface.\r\n */\r\nexport interface IDocInterface extends IDocBase {\r\n  /**\r\n   * {@inheritdoc IDocBase.kind}\r\n   */\r\n  kind: 'interface';\r\n  /**\r\n   * A mapping from the name of a member API to its IDocMember\r\n   */\r\n  members: { [name: string]: IDocMember};\r\n\r\n  /**\r\n   * Interfaces implemented by this interface\r\n   */\r\n  implements?: string;\r\n\r\n  /**\r\n   * The base interface for this interface\r\n   */\r\n  extends?: string;\r\n\r\n  /**\r\n   * Generic type parameters for this interface\r\n   */\r\n  typeParameters?: string[];\r\n}\r\n\r\n/**\r\n * IDocPackage is an object contaning the exported\r\n * definions of this API package. The exports can include:\r\n * classes, interfaces, enums, functions.\r\n */\r\nexport interface IDocPackage {\r\n   /**\r\n   * {@inheritdoc IDocBase.kind}\r\n   */\r\n  kind: 'package';\r\n\r\n  /**\r\n   * IDocItems of exported API items\r\n   */\r\n  exports: { [name: string]: IDocItem};\r\n\r\n  /**\r\n   * The following are needed so that this interface and can share\r\n   * common properties with others that extend IDocBase. The IDocPackage\r\n   * does not extend the IDocBase because a summary is not required for\r\n   * a package.\r\n   */\r\n  isBeta?: boolean;\r\n  summary?: IDocElement[];\r\n  remarks?: IDocElement[];\r\n  deprecatedMessage?: IDocElement[];\r\n}\r\n\r\n/**\r\n * A member of a class.\r\n */\r\nexport type IDocMember = IDocProperty | IDocMethod;\r\n\r\nexport type IDocItem = IDocProperty | IDocMember | IDocFunction |\r\n   IDocClass |IDocEnum | IDocInterface | IDocPackage;"],"sourceRoot":"..\\src"}