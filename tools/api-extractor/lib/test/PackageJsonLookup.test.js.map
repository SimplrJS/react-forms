{"version":3,"sources":["test/PackageJsonLookup.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,+BAA+B;AAC/B,uFAAuF;AAEvF,6BAA8B;AAC9B,2BAA6B;AAC7B,0DAAqD;AAErD,QAAQ,CAAC,mBAAmB,EAAE;IAE5B,QAAQ,CAAC,aAAa,EAAE;QAEtB,EAAE,CAAC,wBAAwB,EAAE;YAC3B,IAAM,iBAAiB,GAAsB,IAAI,2BAAiB,EAAE,CAAC;YACrE,IAAM,cAAc,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;YACjF,aAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,UAAU,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE;YACrC,IAAM,iBAAiB,GAAsB,IAAI,2BAAiB,EAAE,CAAC;YACrE,IAAM,cAAc,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gDAAgD,CAAC,CAAC;YAEtG,0EAA0E;YAC1E,IAAM,SAAS,GAAW,iBAAiB,CAAC,yBAAyB,CAAC,cAAc,CAAC,CAAC;YACtF,aAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,qBAAqB,GAAG,SAAS,CAAC,CAAC;QAC7F,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"test/PackageJsonLookup.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/// <reference types=\"mocha\" />\r\n/* tslint:disable:no-function-expression - Mocha uses a poorly scoped \"this\" pointer */\r\n\r\nimport { assert } from 'chai';\r\nimport * as path from 'path';\r\nimport PackageJsonLookup from '../PackageJsonLookup';\r\n\r\ndescribe('PackageJsonLookup', function (): void {\r\n\r\n  describe('basic tests', function (): void {\r\n\r\n    it('readPackageName() test', function (): void {\r\n      const packageJsonLookup: PackageJsonLookup = new PackageJsonLookup();\r\n      const sourceFilePath: string = path.join(__dirname, '../../testInputs/example1');\r\n      assert.equal(packageJsonLookup.readPackageName(sourceFilePath), 'example1');\r\n    });\r\n\r\n    it('tryFindPackagePathUpwards() test', function (): void {\r\n      const packageJsonLookup: PackageJsonLookup = new PackageJsonLookup();\r\n      const sourceFilePath: string = path.join(__dirname, '../../testInputs/example1/folder/AliasClass.ts');\r\n\r\n      // Example: C:\\web-build-tools\\libraries\\api-extractor\\testInputs\\example1\r\n      const foundPath: string = packageJsonLookup.tryFindPackagePathUpwards(sourceFilePath);\r\n      assert.isTrue(foundPath.search(/[\\\\/]example1$/i) >= 0, 'Unexpected result: ' + foundPath);\r\n    });\r\n  });\r\n});\r\n"],"sourceRoot":"..\\..\\src"}