{"version":3,"sources":["test/TypeScriptHelpers.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,+BAA+B;AAE/B,6BAA8B;AAC9B,0DAAqD;AAErD,QAAQ,CAAC,yBAAyB,EAAE;IAElC,QAAQ,CAAC,wBAAwB,EAAE;QACjC,EAAE,CAAC,aAAa,EAAE;YAChB,aAAM,CAAC,SAAS,CACd,2BAAiB,CAAC,oBAAoB,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAClF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,aAAa,EAAE;YAChB,aAAM,CAAC,SAAS,CACd,2BAAiB,CAAC,oBAAoB,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CACtD,CAAC;QACJ,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,yBAAyB,EAAE;QAClC,EAAE,CAAC,oBAAoB,EAAE;YACvB,aAAM,CAAC,KAAK,CACV,2BAAiB,CAAC,qBAAqB,CAAC,mCAAmC,CAAC,EAC5E,iBAAiB,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qBAAqB,EAAE;YACxB,aAAM,CAAC,KAAK,CACV,2BAAiB,CAAC,qBAAqB,CAAC,4BAA4B,CAAC,EACrE,qBAAqB,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oBAAoB,EAAE;YACvB,aAAM,CAAC,KAAK,CACV,2BAAiB,CAAC,oBAAoB,CACtC,CAAC,KAAK,EAAE,sBAAsB,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC,EAC/E,uDAAuD,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"test/TypeScriptHelpers.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/// <reference types=\"mocha\" />\r\n\r\nimport { assert } from 'chai';\r\nimport TypeScriptHelpers from '../TypeScriptHelpers';\r\n\r\ndescribe('TypeScriptHelpers tests', () => {\r\n\r\n  describe('splitStringWithRegEx()', () => {\r\n    it('simple case', () => {\r\n      assert.deepEqual(\r\n        TypeScriptHelpers.splitStringWithRegEx('ABCDaFG', /A/gi), ['A', 'BCD', 'a', 'FG']\r\n      );\r\n    });\r\n\r\n    it('empty match', () => {\r\n      assert.deepEqual(\r\n        TypeScriptHelpers.splitStringWithRegEx('', /A/gi), []\r\n      );\r\n    });\r\n\r\n  });\r\n\r\n  describe('extractCommentContent()', () => {\r\n    it('multi-line comment', () => {\r\n      assert.equal(\r\n        TypeScriptHelpers.extractCommentContent('/**\\n * this is\\n * a test\\n */\\n'),\r\n        'this is\\na test');\r\n    });\r\n\r\n    it('single-line comment', () => {\r\n      assert.equal(\r\n        TypeScriptHelpers.extractCommentContent('/** single line comment */'),\r\n        'single line comment');\r\n    });\r\n\r\n    it('degenerate comment', () => {\r\n      assert.equal(\r\n        TypeScriptHelpers.removeJsdocSequences(\r\n        ['/**', '* degenerate comment', 'star missing here', '* end of comment', '*/']),\r\n        'degenerate comment\\nstar missing here\\nend of comment');\r\n    });\r\n  });\r\n\r\n});\r\n"],"sourceRoot":"..\\..\\src"}